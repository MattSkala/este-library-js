// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview este.app.request.Queue.
*/
goog.provide('este.app.request.Queue');
goog.require('goog.array');
goog.require('goog.Disposable');

/**
  @constructor
  @extends {goog.Disposable}
*/
este.app.request.Queue = function() {
  this.pendings = [];
}
goog.inherits(este.app.request.Queue, goog.Disposable);

/**
  @type {Array.<este.app.Request>}
  @protected
*/
este.app.request.Queue.prototype.pendings = null;

/**
  @param {este.app.Request} request
*/
este.app.request.Queue.prototype.add = function(request) {
  return this.pendings.push(request);
};

/**
  @param {este.app.Request} request
*/
este.app.request.Queue.prototype.contains = function(request) {
  var pending, _i, _len, _ref;
  _ref = this.pendings;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    pending = _ref[_i];
    if (pending.equal(request)) {
      return true;
    }
  }
  return false;
};

/**
  @return {boolean}
*/
este.app.request.Queue.prototype.isEmpty = function() {
  return !this.pendings.length;
};

/**
  Clear pendings requests.
*/
este.app.request.Queue.prototype.clear = function() {
  return this.pendings.length = 0;
};

/**
  @override
*/
este.app.request.Queue.prototype.disposeInternal = function() {
  this.clear();
  return este.app.request.Queue.superClass_.disposeInternal.call(this);
};