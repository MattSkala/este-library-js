// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview View for este.App. It should watches user actions and delegate
  them on view model. este.app.Presenter should watch model changes, persist
  them, then rerender view. For view rendering, we can use Closure Template or
  Facebook react.

  @see este.demos.app.todomvc.todos.list.View
*/
goog.provide('este.app.View');
goog.require('este.ui.Component');
goog.require('goog.dom.classlist');

/**
  @constructor
  @extends {este.ui.Component}
*/
este.app.View = function() {
  este.app.View.superClass_.constructor.call(this);
}
goog.inherits(este.app.View, este.ui.Component);

/**
  Optional view element className.
  @type {string}
*/
este.app.View.prototype.className = '';

/**
  This helper method allows us to generate URL for concrete presenter, so we
  don't have to hardcode URLs in code. All URLs should be defined only at one
  place. In app.start method.
  Example: this.createUrl app.products.list.Presenter, 'id': 123
  @type {Function}
*/
este.app.View.prototype.createUrl = null;

/**
  Redirect to another presenter from code.
  Example: this.redirect app.products.list.Presenter, 'id': 123
  @type {Function}
*/
este.app.View.prototype.redirect = null;

/**
  Scroll position for Este app screen.
  @type {goog.math.Coordinate}
*/
este.app.View.prototype.scroll = null;

/**
  @override
*/
este.app.View.prototype.createDom = function() {
  este.app.View.superClass_.createDom.call(this);
  goog.dom.classlist.add(this.getElement(), 'e-app-view');
  if (this.className) {
    goog.dom.classlist.add(this.getElement(), this.className);
  }
};

/**
  Use this method for events registration.
  This method should be overridden.
  @override
*/
este.app.View.prototype.enterDocument = function() {
  este.app.View.superClass_.enterDocument.call(this);
  this.update();
};

/**
  Use this method for DOM update. This method is called when view is shown
  by default. You should call it when model is changed.
  This method should be overridden.
*/
este.app.View.prototype.update = function() {};