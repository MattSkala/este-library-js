// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview Collection representing list of todos.
*/
goog.provide('este.demos.app.todomvc.todos.Collection');
goog.require('este.Collection');
goog.require('este.demos.app.todomvc.todos.Model');

/**
  @param {Array=} array
  @constructor
  @extends {este.Collection}
*/
este.demos.app.todomvc.todos.Collection = function(array) {
  este.demos.app.todomvc.todos.Collection.superClass_.constructor.call(this, array);
}
goog.inherits(este.demos.app.todomvc.todos.Collection, este.Collection);

/**
  @type {?string}
*/
este.demos.app.todomvc.todos.Collection.prototype.state = null;

/**
  @override
*/
este.demos.app.todomvc.todos.Collection.prototype.model = este.demos.app.todomvc.todos.Model;

/**
  @param {boolean} completed
*/
este.demos.app.todomvc.todos.Collection.prototype.toggleCompleted = function(completed) {
  return this.each(function(item) {
    return item.set('completed', completed);
  });
};
este.demos.app.todomvc.todos.Collection.prototype.toggleAll = function() {
  var allCompleted;
  allCompleted = this.allCompleted();
  return this.toggleCompleted(!allCompleted);
};
este.demos.app.todomvc.todos.Collection.prototype.clearCompleted = function() {
  return this.removeIf(function(todo) {
    return todo.get('completed');
  });
};

/**
  @return {number}
*/
este.demos.app.todomvc.todos.Collection.prototype.getRemainingCount = function() {
  return this.filter({
    'completed': false
  }).length;
};

/**
  @return {boolean}
*/
este.demos.app.todomvc.todos.Collection.prototype.allCompleted = function() {
  return this.getRemainingCount() === 0;
};

/**
  @return {Array.<Object>}
*/
este.demos.app.todomvc.todos.Collection.prototype.filterByState = function() {
  switch (this.state) {
    case 'active':
      return this.filter({
        'completed': false
      });
    case 'completed':
      return this.filter({
        'completed': true
      });
    default:
      return this.toJson();
  }
};