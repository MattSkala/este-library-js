// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview Todos presenter.
*/
goog.provide('este.demos.app.todomvc.todos.list.Presenter');
goog.require('este.app.Presenter');
goog.require('este.demos.app.todomvc.todos.Collection');
goog.require('este.demos.app.todomvc.todos.list.View');

/**
  @constructor
  @extends {este.app.Presenter}
*/
este.demos.app.todomvc.todos.list.Presenter = function() {
  este.demos.app.todomvc.todos.list.Presenter.superClass_.constructor.call(this);
  this.view = new este.demos.app.todomvc.todos.list.View;
}
goog.inherits(este.demos.app.todomvc.todos.list.Presenter, este.app.Presenter);

/**
  Load collection for view.
  @override
*/
este.demos.app.todomvc.todos.list.Presenter.prototype.load = function(params) {
  var todos;
  todos = new este.demos.app.todomvc.todos.Collection;
  todos.state = params['state'];
  return this.storage.query(todos);
};

/**
  If load was successful and not canceled, then we can set view's filter and
  todos properties and register collection update event.
  @override
*/
este.demos.app.todomvc.todos.list.Presenter.prototype.show = function(result) {
  this.view.todos = /** @type {este.demos.app.todomvc.todos.Collection} */(result.getValue());
  return this.on(this.view.todos, 'update', this.onViewTodosUpdate);
};

/**
  Stop listening when view is going to be hidden.
  @override
*/
este.demos.app.todomvc.todos.list.Presenter.prototype.hide = function() {
  return this.off(this.view.todos, 'update', this.onViewTodosUpdate);
};

/**
  Save model changes and update view if save was successful.
  @param {este.Model.Event} e
  @protected
*/
este.demos.app.todomvc.todos.list.Presenter.prototype.onViewTodosUpdate = function(e) {
  var result,
    _this = this;
  result = this.storage.saveChangesFromEvent(e);
  return goog.result.waitOnSuccess(result, function() {
    return _this.view.update();
  });
};