// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview goog.storage.Storage factory.
  @namespace este.storage
*/
goog.provide('este.storage.create');
goog.provide('este.storage.createCollectable');
goog.require('goog.storage.mechanism.mechanismfactory');
goog.require('goog.storage.Storage');
goog.require('goog.storage.CollectableStorage');

/**
  @param {string} key e.g. e-ui-formspersister
  @param {boolean=} session
  @return {goog.storage.Storage}
*/
este.storage.create = function(key, session) {
  var mechanism;
  if (session == null) {
    session = false;
  }
  mechanism = este.storage.getMechanism(key, session);
  if (!mechanism) {
    return null;
  }
  return new goog.storage.Storage(mechanism);
};

/**
  @param {string} key e.g. e-ui-formspersister
  @param {boolean=} session
  @return {goog.storage.CollectableStorage}
*/
este.storage.createCollectable = function(key, session) {
  var mechanism, storage;
  if (session == null) {
    session = false;
  }
  mechanism = este.storage.getMechanism(key, session);
  if (!mechanism) {
    return null;
  }
  storage = new goog.storage.CollectableStorage(mechanism);
  storage.collect(true);
  return storage;
};

/**
  @param {string} key e.g. e-ui-formspersister
  @param {boolean=} session
  @return {goog.storage.mechanism.IterableMechanism}
*/
este.storage.getMechanism = function(key, session) {
  var mechanismfactory;
  mechanismfactory = goog.storage.mechanism.mechanismfactory;
  if (session) {
    return mechanismfactory.createHTML5SessionStorage(key);
  }
  return mechanismfactory.create(key);
};