// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview este.ui.lightbox.Lightbox.

  @see /demos/ui/lightbox.html
*/
goog.provide('este.ui.lightbox.Lightbox');
goog.require('este.ui.Component');

/**
  @param {Function} createView
  @constructor
  @extends {este.ui.Component}
*/
este.ui.lightbox.Lightbox = function(createView) {
  this.createView = createView;
  este.ui.lightbox.Lightbox.superClass_.constructor.call(this);
}
goog.inherits(este.ui.lightbox.Lightbox, este.ui.Component);

/**
  @type {Function}
  @protected
*/
este.ui.lightbox.Lightbox.prototype.createView = null;

/**
  @override
*/
este.ui.lightbox.Lightbox.prototype.enterDocument = function() {
  este.ui.lightbox.Lightbox.superClass_.enterDocument.call(this);
  this.on(this, este.ui.lightbox.View.EventType.CLOSE, this.onViewClose);
  this.on('a', 'click', this.onAnchorClick);
};

/**
  @param {goog.events.Event} e
  @protected
*/
este.ui.lightbox.Lightbox.prototype.onViewClose = function(e) {
  return this.closeView();
};

/**
  @param {goog.events.BrowserEvent} e
  @protected
*/
este.ui.lightbox.Lightbox.prototype.onAnchorClick = function(e) {
  if (!this.isLightboxAnchor(e.target)) {
    return;
  }
  e.preventDefault();
  return this.showView(e.target);
};

/**
  @param {Node} node
  @protected
*/
este.ui.lightbox.Lightbox.prototype.isLightboxAnchor = function(node) {
  return node.rel.indexOf('lightbox') === 0;
};

/**
  @param {Node} anchor
  @protected
*/
este.ui.lightbox.Lightbox.prototype.showView = function(anchor) {
  var anchors, view;
  this.closeView();
  anchors = this.getAnchorsWithSameRelAttribute(anchor.rel);
  view = this.createView(anchor, anchors);
  return this.addChild(view, true);
};

/**
  @protected
*/
este.ui.lightbox.Lightbox.prototype.closeView = function() {
  return this.removeChildren(true);
};

/**
  @param {string} rel
  @protected
*/
este.ui.lightbox.Lightbox.prototype.getAnchorsWithSameRelAttribute = function(rel) {
  return this.getElement().querySelectorAll("a[rel='" + rel + "']");
};