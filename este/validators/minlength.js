// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview Validate string length.
*/
goog.provide('este.validators.MinLength');
goog.provide('este.validators.minLength');
goog.require('este.validators.Base');

/**
  @param {number} minLength
  @param {function(): string=} getMsg
  @constructor
  @extends {este.validators.Base}
*/
este.validators.MinLength = function(minLength, getMsg) {
  this.minLength = minLength;
  este.validators.MinLength.superClass_.constructor.call(this, getMsg);
}
goog.inherits(este.validators.MinLength, este.validators.Base);

/**
  @type {number}
  @protected
*/
este.validators.MinLength.prototype.minLength = 0;

/**
  @override
*/
este.validators.MinLength.prototype.validate = function() {
  goog.asserts.assertString(this.value);
  return this.value.length >= this.minLength;
};

/**
  @override
*/
este.validators.MinLength.prototype.getMsg = function() {
  
/**
    @desc MinLength validator message.
  */
  return este.validators.MinLength.MSG_VALIDATOR_MIN_LENGTH = goog.getMsg('Please enter at least {$minLength} characters.', {
    'minLength': this.minLength
  });
};

/**
  @param {number} minLength
  @param {function(): string=} getMsg
  @return {function(): este.validators.MinLength}
*/
este.validators.minLength = function(minLength, getMsg) {
  return function() {
    return new este.validators.MinLength(minLength, getMsg);
  };
};