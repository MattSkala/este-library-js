// Generated by github.com/steida/coffee2closure 0.0.14
/**
  @fileoverview Validate string length range.
*/
goog.provide('este.validators.RangeLength');
goog.provide('este.validators.rangeLength');
goog.require('este.validators.Base');
goog.require('este.validators.min');
goog.require('este.validators.max');

/**
  @param {number} min
  @param {number} max
  @param {function(): string=} getMsg
  @constructor
  @extends {este.validators.Base}
*/
este.validators.RangeLength = function(min, max, getMsg) {
  this.min = min;
  this.max = max;
  este.validators.RangeLength.superClass_.constructor.call(this, getMsg);
}
goog.inherits(este.validators.RangeLength, este.validators.Base);

/**
  @type {number}
  @protected
*/
este.validators.RangeLength.prototype.min = 0;

/**
  @type {number}
  @protected
*/
este.validators.RangeLength.prototype.max = 0;

/**
  @override
*/
este.validators.RangeLength.prototype.validate = function() {
  var _ref;
  goog.asserts.assertString(this.value);
  return (this.min <= (_ref = this.value.length) && _ref <= this.max);
};

/**
  @override
*/
este.validators.RangeLength.prototype.getMsg = function() {
  
/**
    @desc RangeLength validator message.
  */
  return este.validators.RangeLength.MSG_VALIDATOR_RANGE_LENGTH = goog.getMsg('Please enter a value between {$min} and {$max} characters long.', {
    'min': this.min,
    'max': this.max
  });
};

/**
  @param {number} min
  @param {number} max
  @param {function(): string=} getMsg
  @return {function(): este.validators.RangeLength}
*/
este.validators.rangeLength = function(min, max, getMsg) {
  return function() {
    return new este.validators.RangeLength(min, max, getMsg);
  };
};