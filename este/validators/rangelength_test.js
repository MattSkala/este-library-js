// Generated by github.com/steida/coffee2closure 0.0.14
suite('este.validators.rangeLength', function() {
  var rangeLength;
  rangeLength = null;
  setup(function() {
    return rangeLength = este.validators.rangeLength(2, 3)();
  });
  suite('validate', function() {
    suite('should be valid:', function() {
      test('abc', function() {
        rangeLength.value = 'abc';
        return assert.isTrue(rangeLength.validate());
      });
      return test('ab', function() {
        rangeLength.value = 'ab';
        return assert.isTrue(rangeLength.validate());
      });
    });
    return suite('should be invalid:', function() {
      test('abcd', function() {
        rangeLength.value = 'abcd';
        return assert.isFalse(rangeLength.validate());
      });
      return test('a', function() {
        rangeLength.value = 'a';
        return assert.isFalse(rangeLength.validate());
      });
    });
  });
  return suite('getMsg', function() {
    test('should return message', function() {
      return assert.equal(rangeLength.getMsg(), 'Please enter a value between 2 and 3 characters long.');
    });
    return test('should return alternative message', function() {
      var getMsg;
      getMsg = function() {
        return "Foo " + this.min + " " + this.max;
      };
      rangeLength = este.validators.rangeLength(2, 3, getMsg)();
      return assert.equal(rangeLength.getMsg(), 'Foo 2 3');
    });
  });
});