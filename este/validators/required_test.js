// Generated by github.com/steida/coffee2closure 0.0.14
suite('este.validators.required', function() {
  var required;
  required = null;
  setup(function() {
    return required = este.validators.required()();
  });
  suite('isValidable', function() {
    return test('should return true for *', function() {
      required.value = ' ';
      assert.isTrue(required.isValidable());
      required.value = 0;
      assert.isTrue(required.isValidable());
      required.value = '123';
      assert.isTrue(required.isValidable());
      required.value = {};
      assert.isTrue(required.isValidable());
      required.value = '';
      assert.isTrue(required.isValidable());
      required.value = null;
      assert.isTrue(required.isValidable());
      required.value = void 0;
      return assert.isTrue(required.isValidable());
    });
  });
  suite('validate', function() {
    suite('should return false for', function() {
      test('empty string', function() {
        required.value = '';
        return assert.isFalse(required.validate());
      });
      test('string with whitespaces only', function() {
        required.value = '  ';
        return assert.isFalse(required.validate());
      });
      test('empty array', function() {
        required.value = [];
        return assert.isFalse(required.validate());
      });
      test('null', function() {
        required.value = null;
        return assert.isFalse(required.validate());
      });
      return test('undefined', function() {
        required.value = void 0;
        return assert.isFalse(required.validate());
      });
    });
    return suite('should return true for', function() {
      test('non empty string', function() {
        required.value = 'a';
        return assert.isTrue(required.validate());
      });
      test('non empty array', function() {
        required.value = 'a';
        return assert.isTrue(required.validate());
      });
      test('number', function() {
        required.value = 0;
        return assert.isTrue(required.validate());
      });
      return test('false', function() {
        required.value = false;
        return assert.isTrue(required.validate());
      });
    });
  });
  return suite('getMsg', function() {
    test('should return message', function() {
      return assert.equal(required.getMsg(), 'This field is required.');
    });
    return test('should return alternative message', function() {
      var getMsg;
      getMsg = function() {
        return 'Person name is required.';
      };
      required = este.validators.required(getMsg)();
      return assert.equal(required.getMsg(), getMsg());
    });
  });
});